version: '3.8'

services:
  gateway-api:
    build: ./
    ports:
      - "5050:5000"
    volumes:
      - ../gateway-api:/app
    restart: always
    env_file:
      - .env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - SECRET_KEY=${COGNITO_APP_CLIENT_SECRET}
      - MICRO_APPOINTMENTS_URL=http://micro-appointments:5000
      - MICRO_DOCTORS_URL=http://micro-doctors:5000
      - MICRO_ADDRESS_URL=http://micro-address:5000
      - MICRO_QUEUE_API_URL=http://micro-queue:5000
      - MICRO_AUTH_API_URL=http://micro-auth:5000
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_APP_CLIENT_ID=${COGNITO_APP_CLIENT_ID}
      - COGNITO_ISSUER=https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_USER_POOL_ID}
      - AWS_REGION=${AWS_REGION}
      - DEFAULT_BEARER_TOKEN=${DEFAULT_BEARER_TOKEN3}
    command: python3 -m flask run --host=0.0.0.0 --port=5000 --reload
    stdin_open: true
    tty: true
    networks:
      minha-rede:
        aliases:
          - gateway

  micro-auth-api:
    build: ../micro-auth-api
    ports:
      - "5052:5000"
    volumes:
      - ../micro-auth-api:/app
    restart: always
    env_file:
      - .env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    command: python3 -m flask run --host=0.0.0.0 --port=5000 --reload
    stdin_open: true
    tty: true
    networks:
      minha-rede:
        aliases:
          - micro-auth

  micro-appointments-api:
    build: ../micro-appointments-api
    ports:
      - "5055:5000"
    volumes:
      - ../micro-appointments-api:/app
    restart: always
    env_file:
      - .env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    command: python3 -m flask run --host=0.0.0.0 --port=5000 --reload
    stdin_open: true
    tty: true
    networks:
      minha-rede:
        aliases:
          - micro-appointments

  micro-queue-api:
    build: ../micro-queue-api
    ports:
      - "5053:5000"
    volumes:
      - ../micro-queue-api:/app
    restart: always
    env_file:
      - .env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MICRO_APPOINTMENTS_URL=http://micro-appointments:5000
    command: python3 -m flask run --host=0.0.0.0 --port=5000 --reload
    stdin_open: true
    tty: true
    networks:
      minha-rede:
        aliases:
          - micro-queue

  frontend:
    build:
      context: ../app
      dockerfile: Dockerfile
    image: app-frontend
    container_name: app-frontend
    ports:
      - "8080:80"
    depends_on:
      - gateway-api
    networks:
      minha-rede:
        aliases:
          - frontend

networks:
  minha-rede:
    driver: bridge
